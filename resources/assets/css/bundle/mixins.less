/*---------------------------------------------------
  LESS Elements 0.9
---------------------------------------------------
  A set of useful LESS mixins
  More info at: http://lesselements.com
---------------------------------------------------*/

// Cross browser (IE8) font-size, DO NOT USE SHORT-HAND FONT-NOTATION IN CSS!!
.font-size(@sizeValue) {
	@remValue: (@sizeValue / 10);
	@pxValue: @sizeValue;
	font-size: ~"@{pxValue}px";
	font-size: ~"@{remValue}rem";
}

// Cross browser (IE8) line-height, DO NOT USE SHORT-HAND FONT-NOTATION IN CSS!!
.line-height(@sizeValue) {
	@remValue: (@sizeValue / 10);
	@pxValue: @sizeValue;
	line-height: ~"@{pxValue}px";
	line-height: ~"@{remValue}rem";
}

// Gradient (for usage, see: http://webdesign.tutsplus.com/tutorials/making-gradients-easier-with-less-mixins--cms-24072)
.gradient(@type; @colors; @dir: 0deg; @prefixes: webkit, moz, ms, o; @index: length(@prefixes)) when (@index > 0) {
    .gradient(@type; @colors; @dir; @prefixes; (@index - 1));

    @prefix  : extract(@prefixes, @index);
    @dir-old : 90 - (@dir);

    background-image: ~"-@{prefix}-@{type}-gradient(@{dir-old}, @{colors})";
}

.background-gradient-top(){
  background: rgb(0,0,0);
  background: -moz-linear-gradient(top, rgba(0,0,0,1) 0%, rgba(113,17,209,1) 100%);
  background: -webkit-linear-gradient(top, rgba(0,0,0,1) 0%,rgba(113,17,209,1) 100%);
  background: linear-gradient(to bottom, rgba(0,0,0,1) 0%,rgba(113,17,209,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#7111d1',GradientType=0 );
}

.background-gradient-bottom(){
  background: rgb(113,17,209);
  background: -moz-linear-gradient(top, rgba(113,17,209,1) 0%, rgba(0,0,0,1) 100%);
  background: -webkit-linear-gradient(top, rgba(113,17,209,1) 0%,rgba(0,0,0,1) 100%);
  background: linear-gradient(to bottom, rgba(113,17,209,1) 0%,rgba(0,0,0,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#7111d1', endColorstr='#000000',GradientType=0 );
}

// CSS3 filters
.filter(@value) {
    -webkit-filter: @value;
    -moz-filter: @value;
    -ms-filter: @value;
    -o-filter: @value;
    filter: @value;
}

// CSS blur
.blur(@radius: 5px) {
    -webkit-filter: blur(@radius);
    -moz-filter: blur(@radius);
    -ms-filter: blur(@radius);
    -o-filter: blur(@radius);
    filter: blur(@radius);
}

// Border radius
.border-radius(@radius: 3px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Backface visibility
.backface-visibility(@value: hidden) {
  -webkit-backface-visibility: @value;
     -moz-backface-visibility: @value;
          backface-visibility: @value;
}

// Appearence {
.appearance(@argument: none) {
  -webkit-appearance: @argument;
     -moz-appearance: @argument;
      -ms-appearance: @argument;
          appearance: @argument;
}

// Transitions
.transition(@value: 0.1s ease-in-out) {
  -webkit-transition: @value;
     -moz-transition: @value;
       -o-transition: @value;
          transition: @value;
}

// Transition delay
.transition-delay(@value: 0.2s) {
  -webkit-transition-delay: @value;
     -moz-transition-delay: @value;
       -o-transition-delay: @value;
          transition-delay: @value;
}

// Inner shadow
.inner-shadow() {
  -webkit-box-shadow: inset @value;
     -moz-box-shadow: inset @value;
          box-shadow: inset @value;
}

// Drop shadow
.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
     -moz-box-shadow: @arguments;
          box-shadow: @arguments;
}

// Box sizing
.box-sizing(@sizing: border-box) {
  -webkit-box-sizing: @sizing;
     -moz-box-sizing: @sizing;
      -ms-box-sizing: @sizing;
          box-sizing: @sizing;
}

.user-select(@argument: none) {
  -webkit-user-select: @argument;
     -moz-user-select: @argument;
      -ms-user-select: @argument;
       -o-user-select: @argument;
          user-select: @argument;
}

// Columns
.columns(@colcount: 2, @colgap: @spacing) {
   -webkit-column-count: @colcount;
     -webkit-column-gap: @colgap;
      -moz-column-count: @colcount;
        -moz-column-gap: @colgap;
           column-count: @colcount;
             column-gap: @colgap;
}

// Background size
.background-size(@value: cover) {
  -webkit-background-size: @value; // Android 2.1 - 2.3
     -moz-background-size: @value; // FireFox 3.6
       -o-background-size: @value; // Opera 10.0 - 10.1
          background-size: @value;
}

// Background clip
.background-clip(@argument: padding-box) {
  -webkit-background-clip: @argument;
     -moz-background-clip: @argument;
      -ms-background-clip: @argument;
       -o-background-clip: @argument;
          background-clip: @argument;
}

// Animation
.animation(@animation) {
  -webkit-animation: @animation;
     -moz-animation: @animation;
      -ms-animation: @animation;
       -o-animation: @animation;
          animation: @animation;
}

// Transform style
.transform-style(@value: preserve-3d) {
  -webkit-transform-style: @value;
     -moz-transform-style: @value;
      -ms-transform-style: @value;
       -o-transform-style: @value;
          transform-style: @value;
}

// Transform origin
.transform-origin(@value) {
  -webkit-transform-origin: @value;
     -moz-transform-origin: @value;
      -ms-transform-origin: @value;
       -o-transform-origin: @value;
          transform-origin: @value;
}

// Perspective
.perspective(@value) {
  -webkit-perspective: @value;
     -moz-perspective: @value;
      -ms-perspective: @value;
       -o-perspective: @value;
          perspective: @value;
}

// Algemene transform
.transform(@value) {
  -webkit-transform: @value;
     -moz-transform: @value;
      -ms-transform: @value;
       -o-transform: @value;
          transform: @value;
}

// Transform rotate
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

// Transform rotate X
.rotateX(@degrees) {
  -webkit-transform: rotateX(@degrees);
     -moz-transform: rotateX(@degrees);
      -ms-transform: rotateX(@degrees);
       -o-transform: rotateX(@degrees);
          transform: rotateX(@degrees);
}

// Transform rotate Y
.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
     -moz-transform: rotateY(@degrees);
      -ms-transform: rotateY(@degrees);
       -o-transform: rotateY(@degrees);
          transform: rotateY(@degrees);
}

// Transform rotate 3d
.rotate3d(@x, @y, @z) {
  -webkit-transform: rotate(@x, @y, @z);
     -moz-transform: rotate(@x, @y, @z);
      -ms-transform: rotate(@x, @y, @z);
       -o-transform: rotate(@x, @y, @z);
          transform: rotate(@x, @y, @z);
}

// Transform scale 3d
.scale3d(@x, @y, @z) {
  -webkit-transform: scale3d(@x, @y, @z);
     -moz-transform: scale3d(@x, @y, @z);
      -ms-transform: scale3d(@x, @y, @z);
       -o-transform: scale3d(@x, @y, @z);
          transform: scale3d(@x, @y, @z);
}

// Transform scale-x
.scaleX(@ratio) {
  -webkit-transform: scaleX(@ratio);
     -moz-transform: scaleX(@ratio);
      -ms-transform: scaleX(@ratio);
       -o-transform: scaleX(@ratio);
          transform: scaleX(@ratio);
}

// Transform scale-y
.scaleY(@ratio) {
  -webkit-transform: scaleY(@ratio);
     -moz-transform: scaleY(@ratio);
      -ms-transform: scaleY(@ratio);
       -o-transform: scaleY(@ratio);
          transform: scaleY(@ratio);
}

// Transform scale
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}

// Transform skew
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skew(@x, @y);
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
}

// Transform translate
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

// Transform translate 3D
.translate3d(@x, @y, @z) {
  -webkit-transform: translate3d(@x, @y, @z);
     -moz-transform: translate3d(@x, @y, @z);
      -ms-transform: translate3d(@x, @y, @z);
       -o-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

// Transform translate Z
.translateZ(@value) {
    -webkit-transform: translateZ(@value);
    -moz-transform: translateZ(@value);
    -ms-transform: translateZ(@value);
    -o-transform: translateZ(@value);
    transform: translateZ(@value);
}

// Transform translate Y
.translateY(@value) {
  -webkit-transform: translateY(@value);
     -moz-transform: translateY(@value);
      -ms-transform: translateY(@value);
       -o-transform: translateY(@value);
          transform: translateY(@value);
}

// Transform translate X
.translateX(@value) {
  -webkit-transform: translateX(@value);
     -moz-transform: translateX(@value);
      -ms-transform: translateX(@value);
       -o-transform: translateX(@value);
          transform: translateX(@value);
}

// Transform X rotate
.rotateX(@deg) {
  -webkit-transform: rotateX(@deg);
     -moz-transform: rotateX(@deg);
      -ms-transform: rotateX(@deg);
       -o-transform: rotateX(@deg);
          transform: rotateX(@deg);
}

// Transform Y rotate
.rotateY(@deg) {
  -webkit-transform: rotateY(@deg);
     -moz-transform: rotateY(@deg);
      -ms-transform: rotateY(@deg);
       -o-transform: rotateY(@deg);
          transform: rotateY(@deg);
}

// --------------------------------------------------
// Flexbox LESS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// Source: https://gist.github.com/jayj/4012969
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
.displayflex(@display: flex) {
    display: -webkit-box;
    display: -moz-box;
    display: ~"-webkit-@{display}";
    display: ~"-moz-@{display}";
    display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
    display: ~"-ms-@{display}"; // IE11
    display: @display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
    -webkit-box-flex: @columns;
    -moz-box-flex:  @columns;
    -webkit-flex: @columns;
    -moz-flex: @columns;
    -ms-flex: @columns;
    flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
    -webkit-flex-direction: @direction;
    -moz-flex-direction: @direction;
    -ms-flex-direction: @direction;
    flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
    -webkit-flex-wrap: @wrap;
    -moz-flex-wrap: @wrap;
    -ms-flex-wrap: @wrap;
    flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
    -webkit-flex-flow: @flow;
    -moz-flex-flow: @flow;
    -ms-flex-flow: @flow;
    flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
    -webkit-box-ordinal-group: @order;
    -moz-box-ordinal-group: @order;
    -webkit-order: @order;
    -moz-order: @order;
    -ms-order: @order;
    order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
    -webkit-flex-grow: @grow;
    -moz-flex-grow: @grow;
    -ms-flex-grow: @grow;
    flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
.flex-shrink(@shrink: 1) {
    -webkit-flex-shrink: @shrink;
    -moz-flex-shrink: @shrink;
    -ms-flex-shrink: @shrink;
    flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
.flex-basis(@width: auto) {
    -webkit-flex-basis: @width;
    -moz-flex-basis: @width;
    -ms-flex-basis: @width;
    flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
.justify-content(@justify: flex-start) {
    -webkit-justify-content: @justify;
    -moz-justify-content: @justify;
    -ms-justify-content: @justify;
    justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
    -webkit-align-content: @align;
    -moz-align-content: @align;
    -ms-align-content: @align;
    align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
.align-items(@align: stretch) {
    -webkit-align-items: @align;
    -moz-align-items: @align;
    -ms-align-items: @align;
    align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
    -webkit-align-self: @align;
    -moz-align-self: @align;
    -ms-align-self: @align;
    align-self: @align;
}
